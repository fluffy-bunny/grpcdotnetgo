// Code generated by protoc-gen-go-di. DO NOT EDIT.

package helloworld

import (
	context "context"
	grpcdotnetgo "github.com/fluffy-bunny/grpcdotnetgo"
	dicontext "github.com/fluffy-bunny/grpcdotnetgo/middleware/dicontext"
	sarulabsdi "github.com/fluffy-bunny/sarulabsdi"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpcdotnetgo.SupportPackageIsVersion7

// IGreeterService defines the required downstream service interface
type IGreeterService interface {
	SayHello(request *HelloRequest) (*HelloReply, error)
}

// IGreeterService reflect type
var TypeIGreeterService = sarulabsdi.GetInterfaceReflectType((*IGreeterService)(nil))

// GetGreeterServiceFromContainer fetches the downstream di.Request scoped service
func GetGreeterServiceFromContainer(ctn sarulabsdi.Container) IGreeterService {
	return ctn.GetByType(TypeIGreeterService).(IGreeterService)
}

// Impl for Greeter server instances
type greeterServer struct {
	UnimplementedGreeterServer
}

func RegisterGreeterServerDI(s grpc.ServiceRegistrar) {
	// Register the server
	RegisterGreeterServer(s, &greeterServer{})
}

func (s *greeterServer) SayHello(ctx context.Context, request *HelloRequest) (*HelloReply, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := GetGreeterServiceFromContainer(requestContainer)
	return downstreamService.SayHello(request)
}

// IGreeter2Service defines the required downstream service interface
type IGreeter2Service interface {
	SayHello(request *HelloRequest) (*HelloReply, error)
}

// IGreeter2Service reflect type
var TypeIGreeter2Service = sarulabsdi.GetInterfaceReflectType((*IGreeter2Service)(nil))

// GetGreeter2ServiceFromContainer fetches the downstream di.Request scoped service
func GetGreeter2ServiceFromContainer(ctn sarulabsdi.Container) IGreeter2Service {
	return ctn.GetByType(TypeIGreeter2Service).(IGreeter2Service)
}

// Impl for Greeter2 server instances
type greeter2Server struct {
	UnimplementedGreeter2Server
}

func RegisterGreeter2ServerDI(s grpc.ServiceRegistrar) {
	// Register the server
	RegisterGreeter2Server(s, &greeter2Server{})
}

func (s *greeter2Server) SayHello(ctx context.Context, request *HelloRequest) (*HelloReply, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := GetGreeter2ServiceFromContainer(requestContainer)
	return downstreamService.SayHello(request)
}
