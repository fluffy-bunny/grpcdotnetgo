// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package lambda

import (
	"reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
)

// ReflectTypeGenerateUUID used when your service claims to implement GenerateUUID
var ReflectTypeGenerateUUID = reflect.TypeOf(GenerateUUID(nil))

// AddSingletonGenerateUUIDFunc adds a func to the DI
func AddGenerateUUIDFunc(builder *di.Builder, fnc GenerateUUID) {
	di.AddFunc(builder, fnc)
}

// RemoveAllGenerateUUIDFunc removes all GenerateUUID functions from the DI
func RemoveAllGenerateUUIDFunc(builder *di.Builder) {
	builder.RemoveAllByType(ReflectTypeGenerateUUID)
}

// GetGenerateUUIDFromContainer alternative to SafeGetGenerateUUIDFromContainer but panics of object is not present
func GetGenerateUUIDFromContainer(ctn di.Container) GenerateUUID {
	return ctn.GetByType(ReflectTypeGenerateUUID).(GenerateUUID)
}

// GetManyGenerateUUIDFromContainer alternative to SafeGetManyGenerateUUIDFromContainer but panics of object is not present
func GetManyGenerateUUIDFromContainer(ctn di.Container) []GenerateUUID {
	objs := ctn.GetManyByType(ReflectTypeGenerateUUID)
	var results []GenerateUUID
	for _, obj := range objs {
		results = append(results, obj.(GenerateUUID))
	}
	return results
}

// SafeGetGenerateUUIDFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetGenerateUUIDFromContainer(ctn di.Container) (GenerateUUID, error) {
	obj, err := ctn.SafeGetByType(ReflectTypeGenerateUUID)
	if err != nil {
		return nil, err
	}
	return obj.(GenerateUUID), nil
}

// SafeGetManyGenerateUUIDFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetManyGenerateUUIDFromContainer(ctn di.Container) ([]GenerateUUID, error) {
	objs, err := ctn.SafeGetManyByType(ReflectTypeGenerateUUID)
	if err != nil {
		return nil, err
	}
	var results []GenerateUUID
	for _, obj := range objs {
		results = append(results, obj.(GenerateUUID))
	}
	return results, nil
}
