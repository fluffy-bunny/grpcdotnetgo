// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package backgroundtasks

import (
	"reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
)

// ReflectTypeIJobsProvider used when your service claims to implement IJobsProvider
var ReflectTypeIJobsProvider = di.GetInterfaceReflectType((*IJobsProvider)(nil))

// AddSingletonIJobsProviderByObj adds a prebuilt obj
func AddSingletonIJobsProviderByObj(builder *di.Builder, obj interface{}) {
	di.AddSingletonWithImplementedTypesByObj(builder, obj, ReflectTypeIJobsProvider)
}

// AddSingletonIJobsProvider adds a type that implements IJobsProvider
func AddSingletonIJobsProvider(builder *di.Builder, implType reflect.Type) {
	di.AddSingletonWithImplementedTypes(builder, implType, ReflectTypeIJobsProvider)
}

// AddSingletonIJobsProviderByFunc adds a type by a custom func
func AddSingletonIJobsProviderByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddSingletonWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIJobsProvider)
}

// AddTransientIJobsProvider adds a type that implements IJobsProvider
func AddTransientIJobsProvider(builder *di.Builder, implType reflect.Type) {
	di.AddTransientWithImplementedTypes(builder, implType, ReflectTypeIJobsProvider)
}

// AddTransientIJobsProviderByFunc adds a type by a custom func
func AddTransientIJobsProviderByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddTransientWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIJobsProvider)
}

// AddScopedIJobsProvider adds a type that implements IJobsProvider
func AddScopedIJobsProvider(builder *di.Builder, implType reflect.Type) {
	di.AddScopedWithImplementedTypes(builder, implType, ReflectTypeIJobsProvider)
}

// AddScopedIJobsProviderByFunc adds a type by a custom func
func AddScopedIJobsProviderByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddScopedWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIJobsProvider)
}

// GetIJobsProviderFromContainer alternative to SafeGetIJobsProviderFromContainer but panics of object is not present
func GetIJobsProviderFromContainer(ctn di.Container) IJobsProvider {
	return ctn.GetByType(ReflectTypeIJobsProvider).(IJobsProvider)
}

// SafeGetIJobsProviderFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetIJobsProviderFromContainer(ctn di.Container) (IJobsProvider, error) {
	obj, err := ctn.SafeGetByType(ReflectTypeIJobsProvider)
	if err != nil {
		return nil, err
	}
	return obj.(IJobsProvider), nil
}
