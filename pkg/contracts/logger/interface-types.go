// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package logger

import (
	"reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
)

// ReflectTypeILogger used when your service claims to implement ILogger
var ReflectTypeILogger = di.GetInterfaceReflectType((*ILogger)(nil))

// AddILoggerByObj adds a prebuilt obj
func AddILoggerByObj(builder *di.Builder, obj interface{}) {
	di.AddSingletonWithImplementedTypesByObj(builder, obj, ReflectTypeILogger)
}

// AddSingletonILogger adds a type that implements ILogger
func AddSingletonILogger(builder *di.Builder, implType reflect.Type) {
	di.AddSingletonWithImplementedTypes(builder, implType, ReflectTypeILogger)
}

// AddSingletonILoggerByFunc adds a type by a custom func
func AddSingletonILoggerByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddSingletonWithImplementedTypesByFunc(builder, implType, build, ReflectTypeILogger)
}

// AddTransientILogger adds a type that implements ILogger
func AddTransientILogger(builder *di.Builder, implType reflect.Type) {
	di.AddTransientWithImplementedTypes(builder, implType, ReflectTypeILogger)
}

// AddTransientILoggerByFunc adds a type by a custom func
func AddTransientILoggerByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddTransientWithImplementedTypesByFunc(builder, implType, build, ReflectTypeILogger)
}

// AddScopedILogger adds a type that implements ILogger
func AddScopedILogger(builder *di.Builder, implType reflect.Type) {
	di.AddScopedWithImplementedTypes(builder, implType, ReflectTypeILogger)
}

// AddScopedILoggerByFunc adds a type by a custom func
func AddScopedILoggerByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddScopedWithImplementedTypesByFunc(builder, implType, build, ReflectTypeILogger)
}

// GetILoggerFromContainer alternative to SafeGetILoggerFromContainer but panics of object is not present
func GetILoggerFromContainer(ctn di.Container) ILogger {
	return ctn.GetByType(ReflectTypeILogger).(ILogger)
}

// SafeGetILoggerFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetILoggerFromContainer(ctn di.Container) (ILogger, error) {
	obj, err := ctn.SafeGetByType(ReflectTypeILogger)
	if err != nil {
		return nil, err
	}
	return obj.(ILogger), nil
}
