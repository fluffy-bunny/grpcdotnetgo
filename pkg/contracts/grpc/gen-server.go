// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package grpc

import (
	"reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
)

// ReflectTypeIServiceEndpointRegistration used when your service claims to implement IServiceEndpointRegistration
var ReflectTypeIServiceEndpointRegistration = di.GetInterfaceReflectType((*IServiceEndpointRegistration)(nil))

// AddSingletonIServiceEndpointRegistrationByObj adds a prebuilt obj
func AddSingletonIServiceEndpointRegistrationByObj(builder *di.Builder, obj interface{}) {
	di.AddSingletonWithImplementedTypesByObj(builder, obj, ReflectTypeIServiceEndpointRegistration)
}

// AddSingletonIServiceEndpointRegistration adds a type that implements IServiceEndpointRegistration
func AddSingletonIServiceEndpointRegistration(builder *di.Builder, implType reflect.Type) {
	di.AddSingletonWithImplementedTypes(builder, implType, ReflectTypeIServiceEndpointRegistration)
}

// AddSingletonIServiceEndpointRegistrationByFunc adds a type by a custom func
func AddSingletonIServiceEndpointRegistrationByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddSingletonWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIServiceEndpointRegistration)
}

// AddTransientIServiceEndpointRegistration adds a type that implements IServiceEndpointRegistration
func AddTransientIServiceEndpointRegistration(builder *di.Builder, implType reflect.Type) {
	di.AddTransientWithImplementedTypes(builder, implType, ReflectTypeIServiceEndpointRegistration)
}

// AddTransientIServiceEndpointRegistrationByFunc adds a type by a custom func
func AddTransientIServiceEndpointRegistrationByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddTransientWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIServiceEndpointRegistration)
}

// AddScopedIServiceEndpointRegistration adds a type that implements IServiceEndpointRegistration
func AddScopedIServiceEndpointRegistration(builder *di.Builder, implType reflect.Type) {
	di.AddScopedWithImplementedTypes(builder, implType, ReflectTypeIServiceEndpointRegistration)
}

// AddScopedIServiceEndpointRegistrationByFunc adds a type by a custom func
func AddScopedIServiceEndpointRegistrationByFunc(builder *di.Builder, implType reflect.Type, build func(ctn di.Container) (interface{}, error)) {
	di.AddScopedWithImplementedTypesByFunc(builder, implType, build, ReflectTypeIServiceEndpointRegistration)
}

// RemoveAllIServiceEndpointRegistration removes all IServiceEndpointRegistration from the DI
func RemoveAllIServiceEndpointRegistration(builder *di.Builder) {
	builder.RemoveAllByType(ReflectTypeIServiceEndpointRegistration)
}

// GetIServiceEndpointRegistrationFromContainer alternative to SafeGetIServiceEndpointRegistrationFromContainer but panics of object is not present
func GetIServiceEndpointRegistrationFromContainer(ctn di.Container) IServiceEndpointRegistration {
	return ctn.GetByType(ReflectTypeIServiceEndpointRegistration).(IServiceEndpointRegistration)
}

// GetManyIServiceEndpointRegistrationFromContainer alternative to SafeGetManyIServiceEndpointRegistrationFromContainer but panics of object is not present
func GetManyIServiceEndpointRegistrationFromContainer(ctn di.Container) []IServiceEndpointRegistration {
	objs := ctn.GetManyByType(ReflectTypeIServiceEndpointRegistration)
	var results []IServiceEndpointRegistration
	for _, obj := range objs {
		results = append(results, obj.(IServiceEndpointRegistration))
	}
	return results
}

// SafeGetIServiceEndpointRegistrationFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetIServiceEndpointRegistrationFromContainer(ctn di.Container) (IServiceEndpointRegistration, error) {
	obj, err := ctn.SafeGetByType(ReflectTypeIServiceEndpointRegistration)
	if err != nil {
		return nil, err
	}
	return obj.(IServiceEndpointRegistration), nil
}

// SafeGetManyIServiceEndpointRegistrationFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetManyIServiceEndpointRegistrationFromContainer(ctn di.Container) ([]IServiceEndpointRegistration, error) {
	objs, err := ctn.SafeGetManyByType(ReflectTypeIServiceEndpointRegistration)
	if err != nil {
		return nil, err
	}
	var results []IServiceEndpointRegistration
	for _, obj := range objs {
		results = append(results, obj.(IServiceEndpointRegistration))
	}
	return results, nil
}
