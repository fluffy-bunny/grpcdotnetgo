// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package cookies

import (
	"reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
)

// ReflectTypeSecureCookieConfigAccessor used when your service claims to implement SecureCookieConfigAccessor
var ReflectTypeSecureCookieConfigAccessor = reflect.TypeOf(SecureCookieConfigAccessor(nil))

// AddSingletonSecureCookieConfigAccessorFunc adds a func to the DI
func AddSecureCookieConfigAccessorFunc(builder *di.Builder, fnc SecureCookieConfigAccessor) {
	di.AddFunc(builder, fnc)
}

// RemoveAllSecureCookieConfigAccessorFunc removes all SecureCookieConfigAccessor functions from the DI
func RemoveAllSecureCookieConfigAccessorFunc(builder *di.Builder) {
	builder.RemoveAllByType(ReflectTypeSecureCookieConfigAccessor)
}

// GetSecureCookieConfigAccessorFromContainer alternative to SafeGetSecureCookieConfigAccessorFromContainer but panics of object is not present
func GetSecureCookieConfigAccessorFromContainer(ctn di.Container) SecureCookieConfigAccessor {
	return ctn.GetByType(ReflectTypeSecureCookieConfigAccessor).(SecureCookieConfigAccessor)
}

// GetManySecureCookieConfigAccessorFromContainer alternative to SafeGetManySecureCookieConfigAccessorFromContainer but panics of object is not present
func GetManySecureCookieConfigAccessorFromContainer(ctn di.Container) []SecureCookieConfigAccessor {
	objs := ctn.GetManyByType(ReflectTypeSecureCookieConfigAccessor)
	var results []SecureCookieConfigAccessor
	for _, obj := range objs {
		results = append(results, obj.(SecureCookieConfigAccessor))
	}
	return results
}

// SafeGetSecureCookieConfigAccessorFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetSecureCookieConfigAccessorFromContainer(ctn di.Container) (SecureCookieConfigAccessor, error) {
	obj, err := ctn.SafeGetByType(ReflectTypeSecureCookieConfigAccessor)
	if err != nil {
		return nil, err
	}
	return obj.(SecureCookieConfigAccessor), nil
}

// SafeGetManySecureCookieConfigAccessorFromContainer trys to get the object by type, will not panic, returns nil and error
func SafeGetManySecureCookieConfigAccessorFromContainer(ctn di.Container) ([]SecureCookieConfigAccessor, error) {
	objs, err := ctn.SafeGetManyByType(ReflectTypeSecureCookieConfigAccessor)
	if err != nil {
		return nil, err
	}
	var results []SecureCookieConfigAccessor
	for _, obj := range objs {
		results = append(results, obj.(SecureCookieConfigAccessor))
	}
	return results, nil
}
