// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/serviceprovider (interfaces: IServiceProvider,ISingletonServiceProvider)

// Package serviceprovider is a generated GoMock package.
package serviceprovider

import (
	reflect "reflect"

	di "github.com/fluffy-bunny/sarulabsdi"
	gomock "github.com/golang/mock/gomock"
)

// MockIServiceProvider is a mock of IServiceProvider interface.
type MockIServiceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceProviderMockRecorder
}

// MockIServiceProviderMockRecorder is the mock recorder for MockIServiceProvider.
type MockIServiceProviderMockRecorder struct {
	mock *MockIServiceProvider
}

// NewMockIServiceProvider creates a new mock instance.
func NewMockIServiceProvider(ctrl *gomock.Controller) *MockIServiceProvider {
	mock := &MockIServiceProvider{ctrl: ctrl}
	mock.recorder = &MockIServiceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIServiceProvider) EXPECT() *MockIServiceProviderMockRecorder {
	return m.recorder
}

// GetContainer mocks base method.
func (m *MockIServiceProvider) GetContainer() di.Container {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainer")
	ret0, _ := ret[0].(di.Container)
	return ret0
}

// GetContainer indicates an expected call of GetContainer.
func (mr *MockIServiceProviderMockRecorder) GetContainer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainer", reflect.TypeOf((*MockIServiceProvider)(nil).GetContainer))
}

// MockISingletonServiceProvider is a mock of ISingletonServiceProvider interface.
type MockISingletonServiceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockISingletonServiceProviderMockRecorder
}

// MockISingletonServiceProviderMockRecorder is the mock recorder for MockISingletonServiceProvider.
type MockISingletonServiceProviderMockRecorder struct {
	mock *MockISingletonServiceProvider
}

// NewMockISingletonServiceProvider creates a new mock instance.
func NewMockISingletonServiceProvider(ctrl *gomock.Controller) *MockISingletonServiceProvider {
	mock := &MockISingletonServiceProvider{ctrl: ctrl}
	mock.recorder = &MockISingletonServiceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISingletonServiceProvider) EXPECT() *MockISingletonServiceProviderMockRecorder {
	return m.recorder
}

// GetContainer mocks base method.
func (m *MockISingletonServiceProvider) GetContainer() di.Container {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainer")
	ret0, _ := ret[0].(di.Container)
	return ret0
}

// GetContainer indicates an expected call of GetContainer.
func (mr *MockISingletonServiceProviderMockRecorder) GetContainer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainer", reflect.TypeOf((*MockISingletonServiceProvider)(nil).GetContainer))
}
