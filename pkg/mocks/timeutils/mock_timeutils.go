// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/timeutils (interfaces: ITimeUtils,ITime)

// Package timeutils is a generated GoMock package.
package timeutils

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockITimeUtils is a mock of ITimeUtils interface.
type MockITimeUtils struct {
	ctrl     *gomock.Controller
	recorder *MockITimeUtilsMockRecorder
}

// MockITimeUtilsMockRecorder is the mock recorder for MockITimeUtils.
type MockITimeUtilsMockRecorder struct {
	mock *MockITimeUtils
}

// NewMockITimeUtils creates a new mock instance.
func NewMockITimeUtils(ctrl *gomock.Controller) *MockITimeUtils {
	mock := &MockITimeUtils{ctrl: ctrl}
	mock.recorder = &MockITimeUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITimeUtils) EXPECT() *MockITimeUtilsMockRecorder {
	return m.recorder
}

// StartOfMonthUTC mocks base method.
func (m *MockITimeUtils) StartOfMonthUTC(arg0 int) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartOfMonthUTC", arg0)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// StartOfMonthUTC indicates an expected call of StartOfMonthUTC.
func (mr *MockITimeUtilsMockRecorder) StartOfMonthUTC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartOfMonthUTC", reflect.TypeOf((*MockITimeUtils)(nil).StartOfMonthUTC), arg0)
}

// MockITime is a mock of ITime interface.
type MockITime struct {
	ctrl     *gomock.Controller
	recorder *MockITimeMockRecorder
}

// MockITimeMockRecorder is the mock recorder for MockITime.
type MockITimeMockRecorder struct {
	mock *MockITime
}

// NewMockITime creates a new mock instance.
func NewMockITime(ctrl *gomock.Controller) *MockITime {
	mock := &MockITime{ctrl: ctrl}
	mock.recorder = &MockITimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITime) EXPECT() *MockITimeMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *MockITime) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *MockITimeMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockITime)(nil).Now))
}
