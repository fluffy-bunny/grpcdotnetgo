// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/asynqengine (interfaces: IAsynqEngine)

// Package asynqengine is a generated GoMock package.
package asynqengine

import (
	gomock "github.com/golang/mock/gomock"
)

// MockIAsynqEngine is a mock of IAsynqEngine interface.
type MockIAsynqEngine struct {
	ctrl     *gomock.Controller
	recorder *MockIAsynqEngineMockRecorder
}

// MockIAsynqEngineMockRecorder is the mock recorder for MockIAsynqEngine.
type MockIAsynqEngineMockRecorder struct {
	mock *MockIAsynqEngine
}

// NewMockIAsynqEngine creates a new mock instance.
func NewMockIAsynqEngine(ctrl *gomock.Controller) *MockIAsynqEngine {
	mock := &MockIAsynqEngine{ctrl: ctrl}
	mock.recorder = &MockIAsynqEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAsynqEngine) EXPECT() *MockIAsynqEngineMockRecorder {
	return m.recorder
}
