// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/core (interfaces: IHealthServer)

// Package core is a generated GoMock package.
package core

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc_health_v1 "google.golang.org/grpc/health/grpc_health_v1"
)

// MockIHealthServer is a mock of IHealthServer interface.
type MockIHealthServer struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthServerMockRecorder
}

// MockIHealthServerMockRecorder is the mock recorder for MockIHealthServer.
type MockIHealthServerMockRecorder struct {
	mock *MockIHealthServer
}

// NewMockIHealthServer creates a new mock instance.
func NewMockIHealthServer(ctrl *gomock.Controller) *MockIHealthServer {
	mock := &MockIHealthServer{ctrl: ctrl}
	mock.recorder = &MockIHealthServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHealthServer) EXPECT() *MockIHealthServerMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockIHealthServer) Check(arg0 context.Context, arg1 *grpc_health_v1.HealthCheckRequest) (*grpc_health_v1.HealthCheckResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", arg0, arg1)
	ret0, _ := ret[0].(*grpc_health_v1.HealthCheckResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check.
func (mr *MockIHealthServerMockRecorder) Check(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockIHealthServer)(nil).Check), arg0, arg1)
}

// Watch mocks base method.
func (m *MockIHealthServer) Watch(arg0 *grpc_health_v1.HealthCheckRequest, arg1 grpc_health_v1.Health_WatchServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Watch", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Watch indicates an expected call of Watch.
func (mr *MockIHealthServerMockRecorder) Watch(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Watch", reflect.TypeOf((*MockIHealthServer)(nil).Watch), arg0, arg1)
}
