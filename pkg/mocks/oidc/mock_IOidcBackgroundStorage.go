// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/oidc (interfaces: IOidcBackgroundStorage)

// Package oidc is a generated GoMock package.
package oidc

import (
	reflect "reflect"

	oidc "github.com/fluffy-bunny/grpcdotnetgo/pkg/middleware/oidc"
	gomock "github.com/golang/mock/gomock"
)

// MockIOidcBackgroundStorage is a mock of IOidcBackgroundStorage interface.
type MockIOidcBackgroundStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIOidcBackgroundStorageMockRecorder
}

// MockIOidcBackgroundStorageMockRecorder is the mock recorder for MockIOidcBackgroundStorage.
type MockIOidcBackgroundStorageMockRecorder struct {
	mock *MockIOidcBackgroundStorage
}

// NewMockIOidcBackgroundStorage creates a new mock instance.
func NewMockIOidcBackgroundStorage(ctrl *gomock.Controller) *MockIOidcBackgroundStorage {
	mock := &MockIOidcBackgroundStorage{ctrl: ctrl}
	mock.recorder = &MockIOidcBackgroundStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOidcBackgroundStorage) EXPECT() *MockIOidcBackgroundStorageMockRecorder {
	return m.recorder
}

// AtomicGet mocks base method.
func (m *MockIOidcBackgroundStorage) AtomicGet() *oidc.DiscoveryDocument {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtomicGet")
	ret0, _ := ret[0].(*oidc.DiscoveryDocument)
	return ret0
}

// AtomicGet indicates an expected call of AtomicGet.
func (mr *MockIOidcBackgroundStorageMockRecorder) AtomicGet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtomicGet", reflect.TypeOf((*MockIOidcBackgroundStorage)(nil).AtomicGet))
}

// AtomicStore mocks base method.
func (m *MockIOidcBackgroundStorage) AtomicStore(arg0 *oidc.DiscoveryDocument) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AtomicStore", arg0)
}

// AtomicStore indicates an expected call of AtomicStore.
func (mr *MockIOidcBackgroundStorageMockRecorder) AtomicStore(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtomicStore", reflect.TypeOf((*MockIOidcBackgroundStorage)(nil).AtomicStore), arg0)
}
