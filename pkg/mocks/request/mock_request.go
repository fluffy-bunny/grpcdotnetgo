// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/request (interfaces: IRequest,IItems)

// Package request is a generated GoMock package.
package request

import (
	reflect "reflect"

	request "github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/request"
	gomock "github.com/golang/mock/gomock"
	metautils "github.com/grpc-ecosystem/go-grpc-middleware/util/metautils"
)

// MockIRequest is a mock of IRequest interface.
type MockIRequest struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestMockRecorder
}

// MockIRequestMockRecorder is the mock recorder for MockIRequest.
type MockIRequestMockRecorder struct {
	mock *MockIRequest
}

// NewMockIRequest creates a new mock instance.
func NewMockIRequest(ctrl *gomock.Controller) *MockIRequest {
	mock := &MockIRequest{ctrl: ctrl}
	mock.recorder = &MockIRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRequest) EXPECT() *MockIRequestMockRecorder {
	return m.recorder
}

// GetFullMethodName mocks base method.
func (m *MockIRequest) GetFullMethodName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullMethodName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFullMethodName indicates an expected call of GetFullMethodName.
func (mr *MockIRequestMockRecorder) GetFullMethodName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullMethodName", reflect.TypeOf((*MockIRequest)(nil).GetFullMethodName))
}

// GetItems mocks base method.
func (m *MockIRequest) GetItems() request.IItems {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems")
	ret0, _ := ret[0].(request.IItems)
	return ret0
}

// GetItems indicates an expected call of GetItems.
func (mr *MockIRequestMockRecorder) GetItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockIRequest)(nil).GetItems))
}

// GetMetadata mocks base method.
func (m *MockIRequest) GetMetadata() metautils.NiceMD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(metautils.NiceMD)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockIRequestMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockIRequest)(nil).GetMetadata))
}

// MockIItems is a mock of IItems interface.
type MockIItems struct {
	ctrl     *gomock.Controller
	recorder *MockIItemsMockRecorder
}

// MockIItemsMockRecorder is the mock recorder for MockIItems.
type MockIItemsMockRecorder struct {
	mock *MockIItems
}

// NewMockIItems creates a new mock instance.
func NewMockIItems(ctrl *gomock.Controller) *MockIItems {
	mock := &MockIItems{ctrl: ctrl}
	mock.recorder = &MockIItemsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIItems) EXPECT() *MockIItemsMockRecorder {
	return m.recorder
}

// Clear mocks base method.
func (m *MockIItems) Clear() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Clear")
}

// Clear indicates an expected call of Clear.
func (mr *MockIItemsMockRecorder) Clear() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockIItems)(nil).Clear))
}

// Delete mocks base method.
func (m *MockIItems) Delete(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockIItemsMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIItems)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockIItems) Get(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIItemsMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIItems)(nil).Get), arg0)
}

// GetItems mocks base method.
func (m *MockIItems) GetItems() map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems")
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// GetItems indicates an expected call of GetItems.
func (mr *MockIItemsMockRecorder) GetItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockIItems)(nil).GetItems))
}

// Keys mocks base method.
func (m *MockIItems) Keys() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Keys")
	ret0, _ := ret[0].([]string)
	return ret0
}

// Keys indicates an expected call of Keys.
func (mr *MockIItemsMockRecorder) Keys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Keys", reflect.TypeOf((*MockIItems)(nil).Keys))
}

// Set mocks base method.
func (m *MockIItems) Set(arg0 string, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set.
func (mr *MockIItemsMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockIItems)(nil).Set), arg0, arg1)
}
