// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/backgroundtasks (interfaces: IJobsProvider)

// Package backgroundtasks is a generated GoMock package.
package backgroundtasks

import (
	reflect "reflect"

	backgroundtasks "github.com/fluffy-bunny/grpcdotnetgo/pkg/contracts/backgroundtasks"
	gomock "github.com/golang/mock/gomock"
)

// MockIJobsProvider is a mock of IJobsProvider interface.
type MockIJobsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIJobsProviderMockRecorder
}

// MockIJobsProviderMockRecorder is the mock recorder for MockIJobsProvider.
type MockIJobsProviderMockRecorder struct {
	mock *MockIJobsProvider
}

// NewMockIJobsProvider creates a new mock instance.
func NewMockIJobsProvider(ctrl *gomock.Controller) *MockIJobsProvider {
	mock := &MockIJobsProvider{ctrl: ctrl}
	mock.recorder = &MockIJobsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJobsProvider) EXPECT() *MockIJobsProviderMockRecorder {
	return m.recorder
}

// GetOneTimeJobs mocks base method.
func (m *MockIJobsProvider) GetOneTimeJobs() backgroundtasks.OneTimeJobs {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOneTimeJobs")
	ret0, _ := ret[0].(backgroundtasks.OneTimeJobs)
	return ret0
}

// GetOneTimeJobs indicates an expected call of GetOneTimeJobs.
func (mr *MockIJobsProviderMockRecorder) GetOneTimeJobs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOneTimeJobs", reflect.TypeOf((*MockIJobsProvider)(nil).GetOneTimeJobs))
}

// GetScheduledJobs mocks base method.
func (m *MockIJobsProvider) GetScheduledJobs() backgroundtasks.ScheduledJobs {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScheduledJobs")
	ret0, _ := ret[0].(backgroundtasks.ScheduledJobs)
	return ret0
}

// GetScheduledJobs indicates an expected call of GetScheduledJobs.
func (mr *MockIJobsProviderMockRecorder) GetScheduledJobs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScheduledJobs", reflect.TypeOf((*MockIJobsProvider)(nil).GetScheduledJobs))
}
